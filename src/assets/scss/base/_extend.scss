
.text-black{
    color: $black
}
.text-blue {
    color: $blue;
}
.text-gray {
    color: $grey;
}
.text-green {
    color: $green;
}
.text-white {
    color: $white;
}

.fixed{
  position: fixed;
  left: 0;
  width: 100%;
}
.relative{
  position: relative;
}
.bg_white{
  background: $white;
}
.pointer{
   cursor:pointer;
 }
.block{
  display: block;
}
.hide{
  display: none;
}
.inline_block{
  display: inline-block;
}
.cover{
  background-size:cover important();
}
.contain{
  background-size:contain important();
}
.clearfix:after {
  content: "";
  display: block;
  height: 0;
  clear: both;
  visibility: hidden;
}
.clearfix{
  zoom: 1;
}
.float_left{
  float:left;
}
.float_right{
  float:right;
}
.f36{
    font-size:px2rem(36);
}
.f32{
    font-size:px2rem(32);
}
.f30{
    font-size:px2rem(30);
}
.f28{
    font-size:px2rem(28);
}
.f26{
    font-size:px2rem(26);
}
.f24{
    font-size:px2rem(24);
}

.no-padding {
    padding: 0;
}
.no-margin {
    margin: 0;
}
.no-border {
    border: none;
}

@for $i from 1 through 5 {
    $className: $i*10;
    $classValue: px2rem($className);
    .m#{$className} {
        margin: $classValue;
    }
    .mt#{$className} {
        margin-top: $classValue;
    }
    .mb#{$className} {
        margin-bottom: $classValue;
    }
    .ml#{$className} {
        margin-left: $classValue;
    }
    .mr#{$className} {
        margin-right: $classValue;
    }
    .p#{$className} {
        padding: $classValue;
    }
    .pl#{$className} {
        padding-left: $classValue;
    }
    .pr#{$className} {
        padding-right: $classValue;
    }
    .pb#{$className} {
        padding-bottom: $classValue;
    }
    .pt#{$className}{
        padding-top: $classValue;
    }
}
.text_center{
  text-align: center;
}
.text_right{
  text-align: right;
}
.fwb{
    font-weight: bold;
}
.btn{
    text-align:center;
    display:inline-block;
    *zoom:1;
    *display:inline;
    color: #fff;
    text-align:center;
    white-space: nowrap;
    vertical-align: middle;
    touch-action: manipulation;
    cursor: pointer;
    user-select: none;
}
.btn-default{
    background-color:$green;
}
.btn-primary{
    background-color: #a5b6ad;
}
.btn-success{

}
.btn-info{

}
.btn-warning{

}
.btn-danger{
    background-color:$color_DC320B;
}
.btn-disable{
    color: #fff;
    background-color: #aaaaaa;
}
.btn-link{ }
.btn-lg{
    height: px2rem(78);
    line-height: px2rem(78);
    font-size: px2rem(30);
    padding:0 px2rem(52);
    border-radius: px2rem(78);
}
.btn-md{
    height: px2rem(54);
    line-height: px2rem(54);
    font-size:px2rem(24);
    padding:0 px2rem(28);
    border-radius: px2rem(54);
}
.btn-sm{

}

// 父元素-横向排列（主轴）
.flex-h {
    display: flex;
    -webkit-box-orient: horizontal;
    flex-direction: row;
}
// 父元素-从右到左横向排列（主轴）
.flex-h-r{
    display: flex;
    -webkit-box-pack: end;
    -webkit-box-direction: reverse;
    -webkit-box-orient: horizontal;
    flex-direction: row-reverse;
}
// 父元素-横向换行
.flex-hw {
    flex-wrap: wrap;
}
// 父元素-水平居中（主轴是横向才生效）
.flex-hc {
    -webkit-box-pack: center;
    justify-content: center;
}
// 父元素-纵向排列（主轴）
.flex-v {
    display: flex;
    -webkit-box-orient: vertical;
    flex-direction: column;
}
.flex-v-r{
    display: flex;
    -webkit-box-pack: end;
    -webkit-box-direction: reverse;
    -webkit-box-orient: vertical;
    flex-direction: column-reverse;
}
// 父元素-纵向换行
.flex-vw {
    flex-wrap: wrap;
}
// 父元素-竖直居中（主轴是横向才生效）
.flex-vc {
    -webkit-box-align: center;
    align-items: center;
}
// 子元素-平均分栏
.flex1 {
    flex: 1;
}
.flex2 {
    flex: 2;
}
.flex3 {
    flex: 3;
}
.flex4 {
    flex: 4;
}
.flex5 {
    flex: 5;
}


/*  三角形  */
.arrow {
    display: inline-block; width: 0; height: 0; overflow: hidden; border-width: 5px;
    border-style: solid; border-color: transparent; *zoom: 1;
}
.arrowR {
    border-left-color: #931515; border-right-width: 0;
}
.arrowL {
    border-right-color: #f60; border-left-width: 0;
}
.arrowT {
    border-bottom-color: #f60; border-top-width: 0;
}
.arrowB {
    border-top-color: #931515; border-bottom-width: 0;
}

/*lazyload*/
/*background lazyload style*/
.bg_lazyload{
    &[lazy=loading]{
        background:url(../images/icon/lazy_load_loading.png) scroll no-repeat center center important();
        background-size: px2rem(159) important();
    }
    &[lazy=error]{
        background:url(../images/icon/lazy_load_fail.png) scroll no-repeat center center important();
        background-size: px2rem(138) important();
    }
    &[lazy=loaded]{
        @extend .cover;
    }
}
/*img lazyload style*/
.img_lazyload{
    &[lazy=loading]{
        background:url(../images/icon/lazy_load_loading.png) scroll no-repeat center center important();
        background-size: px2rem(159) important();
    }
    &[lazy=error]{

    }
    &[lazy=loaded]{

    }
}
